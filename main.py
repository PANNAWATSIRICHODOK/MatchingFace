import face_recognition
import cv2
import os
import shutil

# üîπ ‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö
valid_exts = (".jpg", ".jpeg", ".png", ".bmp", ".tiff", ".tif", ".webp")

# üîπ ‡πÇ‡∏´‡∏•‡∏î known faces
known_encodings = []
known_names = []

print("üì• ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• known faces...")
for filename in os.listdir("known"):
    if filename.lower().endswith(valid_exts):
        name = os.path.splitext(filename)[0]
        image = face_recognition.load_image_file(
            os.path.join("known", filename))
        encodings = face_recognition.face_encodings(image)
        if encodings:
            known_encodings.append(encodings[0])
            known_names.append(name)
            print(f"‚úÖ ‡πÇ‡∏´‡∏•‡∏î: {filename} ‡πÄ‡∏õ‡πá‡∏ô {name}")
        else:
            print(f"‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÉ‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡πÉ‡∏ô: {filename}")

# üîπ ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏° output
group_folder = "group_photos"
base_output = "output"
os.makedirs(base_output, exist_ok=True)

print("\nüßπ ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå output...")
# ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Ñ‡∏ô + unknown
for name in known_names + ["unknown"]:
    folder_path = os.path.join(base_output, name)
    shutil.rmtree(folder_path, ignore_errors=True)
    os.makedirs(folder_path, exist_ok=True)
    print(f"üìÅ ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô: {folder_path}")

# ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏û‡∏¥‡πÄ‡∏®‡∏©‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÉ‡∏ö‡∏´‡∏ô‡πâ‡∏≤
folder_no_faces = os.path.join(base_output, "no_faces")
shutil.rmtree(folder_no_faces, ignore_errors=True)
os.makedirs(folder_no_faces, exist_ok=True)
print(f"üìÅ ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô: {folder_no_faces}")

# üîπ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏†‡∏≤‡∏û
print("\nüîç ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏†‡∏≤‡∏û...")
for filename in os.listdir(group_folder):
    if filename.lower().endswith(valid_exts):
        path = os.path.join(group_folder, filename)
        image = face_recognition.load_image_file(path)
        face_locations = face_recognition.face_locations(image)
        face_encodings = face_recognition.face_encodings(image, face_locations)

        # üõë ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠‡πÉ‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏•‡∏¢
        if len(face_encodings) == 0:
            print(
                f"\nüì∏ {filename}: ‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÉ‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡πÉ‡∏ô‡∏†‡∏≤‡∏û ‚Äî (‡∏≠‡∏≤‡∏à‡πÄ‡∏ö‡∏•‡∏≠, ‡∏´‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏á, ‡∏ö‡∏±‡∏á‡∏´‡∏ô‡πâ‡∏≤ ‡∏Ø‡∏•‡∏Ø) üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÉ‡∏ô: output/no_faces/{filename}")
            save_path = os.path.join(folder_no_faces, filename)
            cv2.imwrite(save_path, cv2.cvtColor(image, cv2.COLOR_RGB2BGR))
            continue

        image_bgr = cv2.cvtColor(image, cv2.COLOR_RGB2BGR)
        people_found = set()

        for i, (top, right, bottom, left) in enumerate(face_locations):
            face_encoding = face_encodings[i]
            matches = face_recognition.compare_faces(
                known_encodings, face_encoding)
            name = "unknown"
            color = (0, 0, 255)

            if True in matches:
                index = matches.index(True)
                name = known_names[index]
                color = (0, 255, 0)
                people_found.add(name)
            else:
                people_found.add("unknown")

            # üî≤ ‡∏ß‡∏≤‡∏î‡∏Å‡∏£‡∏≠‡∏ö + ‡πÉ‡∏™‡πà‡∏ä‡∏∑‡πà‡∏≠
            cv2.rectangle(image_bgr, (left, top), (right, bottom), color, 2)
            cv2.putText(image_bgr, name, (left, top - 10),
                        cv2.FONT_HERSHEY_SIMPLEX, 0.6, color, 2)

        # üßæ ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•
        print(f"\nüì∏ {filename}: ‡πÄ‡∏à‡∏≠ {len(face_encodings)} ‡πÉ‡∏ö‡∏´‡∏ô‡πâ‡∏≤ ‚Üí ", end="")
        if people_found == {"unknown"}:
            save_path = os.path.join(base_output, "unknown", filename)
            cv2.imwrite(save_path, image_bgr)
            print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ñ‡∏ô‡∏£‡∏π‡πâ‡∏à‡∏±‡∏Å ‚Üí üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÉ‡∏ô: unknown/")
        else:
            for person in people_found:
                if person != "unknown":
                    save_path = os.path.join(base_output, person, filename)
                    cv2.imwrite(save_path, image_bgr)
            names_to_log = ', '.join(
                [p for p in people_found if p != "unknown"])
            folders_logged = ', '.join(
                [f"{p}/" for p in people_found if p != "unknown"])
            print(f"‚úÖ ‡∏û‡∏ö: {names_to_log} ‚Üí üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÉ‡∏ô: {folders_logged}")

print("\n‚úÖ ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô")
